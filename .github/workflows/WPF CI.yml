name:  Wpf Continuous Integration

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      -master

jobs:

  build:

    strategy:
      matrix:
        targetplatform: [x86, x64]

    runs-on: windows-latest

    env:
      App_Packages_Directory: AppPackages
      SigningCertificate: GitHubActionsDemo.pfx
      Solution_Path: WpfBoilerplate.sln
      # Test_Project_Path: WpfBoilerplate.Tests\WpfBoilerplate.Tests.csproj
      Wpf_Project_Path: WpfBoilerplate\WpfBoilerplate.csproj
      Wap_Project_Directory: WpfBoilerplate.Package
      Wap_Project_Name: WpfBoilerplate.Package.wapproj
      Actions_Allow_Unsecure_Commands: true

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Use Nerdbank.GitVersioning to set version variables
      uses: dotnet/nbgv@master
      id: nbgv 

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.1
      with: 
        msbuild-architecture: x64

    - name: Update manifest version
      run: |
        [xml]$manifest = get-content ".\$env:Wap_Project_Directory\Package.appxmanifest"
        $manifest.Package.Identity.Version = "${{ steps.nbgv.outputs.SimpleVersion }}.0"
        $manifest.save(".\$env:Wap_Project_Directory\Package.appxmanifest")

    #- name: Execute Unit Tests
    #  run: dotnet test $env:Test_Project_Path

    - name:  Restore the Wpf application to populate the obj folder
      run: msbuild $env:Solution_Path /t:Restore /p:Configuration=$env:Configuration /p:RuntimeIdentifier=$env:RuntimeIdentifier
      env:
        Configuration: Debug
        RuntimeIdentifier: win-${{ matrix.targetplatform }}

    - name: Build the Windows Application Packaging Project (wapproj)
      run: msbuild $env:Solution_Path /p:Platform=$env:TargetPlatform /p:Configuration=$env:Configuration /p:UapAppxPackageBuildMode=$env:BuildMode /p:AppxBundle=$env:AppxBundle /p:PackageCertificateKeyFile=$env:SigningCertificate /p:PackageCertificatePassword=${{ secrets.Pfx_Key }}
      env:
        AppxBundle: Never
        BuildMode: SideloadOnly
        Configuration: Debug
        TargetPlatform: ${{ matrix.targetplatform }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4.3.3
      with:
        name: MSIX Package
        path: ${{ env.Wap_Project_Directory }}\${{ env.App_Packages_Directory }}
